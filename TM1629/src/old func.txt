void SendDataMSB(uint8_t data)
{
int i;
  gpio_set_level(TM162_STROBE, 0);
   vTaskDelay(1 / portTICK_PERIOD_MS);
    for(i=0;i<8;i++)
    {
    vTaskDelay(1 / portTICK_PERIOD_MS); 
    gpio_set_level(TM162_Data, data&0x80);
    vTaskDelay(1 / portTICK_PERIOD_MS);
    gpio_set_level(TM162_CLK, 0);
    vTaskDelay(5 / portTICK_PERIOD_MS);
    gpio_set_level(TM162_CLK, 1);
    data<<=1;
    }
     vTaskDelay(1 / portTICK_PERIOD_MS);
  gpio_set_level(TM162_STROBE, 1);

}
void SendData(uint8_t data)
{
int i;
  gpio_set_level(TM162_STROBE, 0);
   vTaskDelay(1 / portTICK_PERIOD_MS);
    for(i=0;i<8;i++)
    {
    vTaskDelay(1 / portTICK_PERIOD_MS); 
    gpio_set_level(TM162_Data, data&0x1);
    vTaskDelay(1 / portTICK_PERIOD_MS);
    gpio_set_level(TM162_CLK, 0);
    vTaskDelay(5 / portTICK_PERIOD_MS);
    gpio_set_level(TM162_CLK, 1);
    data>>=1;
    }
     vTaskDelay(1 / portTICK_PERIOD_MS);
  gpio_set_level(TM162_STROBE, 1);

}


void TM1629Reset() 
{
  SendData(WRITE_INC); // set auto increment mode
  gpio_set_level(TM162_STROBE, 0);
  SendData(0xc0);   // set starting address to 0
  for (uint8_t i = 0; i < 16; i++)
  {
    SendData( 0x00);
  }
  gpio_set_level(TM162_STROBE, 1);
  SendData(WRITE_INC); // set auto increment mode
  SendData(ACTIVATE);
}
//======================================================================================================

void TM1629Init()
{
    gpio_set_level(TM162_STROBE, 1);
    gpio_set_level(TM162_CLK, 1);
    gpio_set_level(TM162_Data, 1);
    SendData(ACTIVATE);
    TM1629Reset();
}
void UpdateDisplay()
{
  

  SendData(WRITE_INC);
  gpio_set_level(TM162_STROBE, 0);
  SendData(0xc0);   // set starting address to 0
  for (uint8_t i = 0; i < 8; i++)
  {
    uint8_t tempData = 0x00;  //SEG1-8
    for (uint8_t j=0; j<8; j++){
      tempData |=( 0x0a/*by amin*/ & (0x80 >> i)) << i >> j;
    }
  }
  gpio_set_level(TM162_STROBE, 1);

}